简单工厂：
	特点，需要在构造工厂里面进行繁多的if else 选择去实例化对象。需要添加新类的时候必须要修改构造工厂，不符合开闭原则。
		

工厂方法：
	针对简单工厂的缺点，对if else 进行进一步抽象，构建一个抽象工厂，每个具体工厂负责创建一个具体的产品。这样客户端只要指定构造工厂
	就能正确实例化出相应的实例。
	
	
抽象工厂：

	对工厂方法的进一步改进以适合一些产品家族的实例化管理，避免客户端进行太多的实例化。对具体的实例化进一步进行抽象。
	
	
从这里可以看出来设计模式的设计原则：
	提取共性，封装变化进行抽象多态。
	如工厂模式对if else 进行多态 ... 定义一个工厂接口，一个产品接口，